---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pyrra.fullname" . }}
  labels:
    {{- include "pyrra.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "pyrra.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pyrra.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pyrra.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-kubernetes
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - kubernetes
            {{- if .Values.genericRules.enabled }}
            - --generic-rules
            {{- end }}
            {{- if and .Values.validatingWebhookConfiguration.enabled ($.Capabilities.APIVersions.Has "cert-manager.io/v1") }}
            - --disable-webhooks=false
            {{- end }}
            {{- if .Values.operatorMetricsAddress }}
            - --metrics-addr={{ .Values.operatorMetricsAddress }}
            {{- end }}
            {{- with .Values.extraKubernetesArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if and .Values.validatingWebhookConfiguration.enabled ($.Capabilities.APIVersions.Has "cert-manager.io/v1") }}
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: certs
          {{- end }}
          ports:
            - name: op-metrics
              containerPort: {{ include "pyrra.operatorMetricsPort" . }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - api
            - --prometheus-url={{ .Values.prometheusUrl }}
            - --api-url=http://localhost:9444
            {{- if .Values.prometheusExternalUrl }}
            - --prometheus-external-url={{ .Values.prometheusExternalUrl }}
            {{- end }}
            {{- if .Values.routePrefix }}
            - --route-prefix={{ .Values.routePrefix }}
            {{- end }}
            {{- with .Values.extraApiArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.openshift.isOpenshift }}
            - --tls-client-ca-file=/etc/tls/openshift-service-ca.crt/service-ca.crt
            - --prometheus-bearer-token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
            {{- end }}
          ports:
          - name: http
            containerPort: 9099
          {{- if .Values.openshift.isOpenshift }}
          volumeMounts:
            - name: openshift-service-ca-crt
              mountPath: /etc/tls/openshift-service-ca.crt
          {{- end }}
        {{- if and .Values.openshift.isOpenshift .Values.openshift.openshiftOauth.enabled }}
        - name: oauth-proxy
          resources: {}
          securityContext: {}
          image: {{ .Values.openshift.openshiftOauth.openshiftOauthProxyImage }}
          ports:
            - name: https
              containerPort: 9091
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: {{ include "pyrra.fullname" . }}
              mountPath: /etc/proxy/secrets/session_secret
              subPath: session_secret
            - name: {{ include "pyrra.fullname" . }}-injected-certs
              mountPath: /etc/proxy/certs
            - name: {{ include "pyrra.fullname" . }}-tls
              mountPath: /etc/tls/private
          args:
            - "-provider=openshift"
            - "-pass-basic-auth=false"
            - "-https-address=:9091"
            - "-http-address="
            - "-email-domain=*"
            - "-upstream=http://localhost:9099"
            - '-openshift-sar={"resource": "clusterrolebinding", "verb": "create"}'
            - '-openshift-delegate-urls={"/": {"resource": "clusterrolebinding", "verb": "create"}}'
            - "-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token"
            - "-cookie-secret-file=/etc/proxy/secrets/session_secret"
            - "-openshift-service-account={{ include "pyrra.fullname" . }}"
            - "-openshift-ca=/etc/pki/tls/cert.pem"
            - "-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
            - "-openshift-ca=/etc/proxy/certs/ca-bundle.crt"
            - "-tls-cert=/etc/tls/private/tls.crt"
            - "-tls-key=/etc/tls/private/tls.key"
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or (and .Values.validatingWebhookConfiguration.enabled ($.Capabilities.APIVersions.Has "cert-manager.io/v1")) .Values.openshift.isOpenshift }}
      volumes:
      {{- if and .Values.validatingWebhookConfiguration.enabled ($.Capabilities.APIVersions.Has "cert-manager.io/v1") }}
        - name: certs
          secret:
            secretName: {{ include "pyrra.fullname" . }}-webhook-validation
      {{- end }}
      {{- if .Values.openshift.isOpenshift }}
        - name: openshift-service-ca-crt
          configMap:
            name: openshift-service-ca.crt
        {{- if and .Values.openshift.isOpenshift .Values.openshift.openshiftOauth.enabled }}
        - name: {{ include "pyrra.fullname" . }}
          secret:
            secretName: {{ include "pyrra.fullname" . }}
        - name: {{ include "pyrra.fullname" . }}-injected-certs
          configMap:
            name: {{ include "pyrra.fullname" . }}-injected-certs
        - name: {{ include "pyrra.fullname" . }}-tls
          secret:
            secretName: {{ include "pyrra.fullname" . }}-tls
        {{- end }}
      {{- end }}
      {{- end }}
